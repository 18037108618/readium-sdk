// Copyright (c) 2012-2013 The Readium Foundation and contributors.
// 
// The Readium SDK is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//

// Automatically generated by BuildErrorTable.
// DO NOT MODIFY


struct _LIBCPP_HIDDEN ErrorInfo
{
    FORCE_INLINE
    ErrorInfo(ViolationSeverity __v, EPUBSpec __s, std::string __sect, std::string __msg) _NOEXCEPT : _severity(__v), _spec(__s), _section(__sect), _message(__msg) {}
    FORCE_INLINE
    ErrorInfo(const ErrorInfo& __o) : _severity(__o._severity), _spec(__o._spec), _section(__o._section), _message(__o._message) {}
    FORCE_INLINE
    ErrorInfo(ErrorInfo&& __o) : _severity(__o._severity), _spec(__o._spec), _section(std::move(__o._section)), _message(std::move(__o._message)) {}
    FORCE_INLINE
    ~ErrorInfo() {}
    
    ErrorInfo&          operator=(const ErrorInfo& __o)
    {
        _severity = __o._severity;
        _spec = __o._spec;
        _section = __o._section;
        _message = __o._message;
        return *this;
    }
    ErrorInfo&          operator=(ErrorInfo&& __o)
    {
        _severity = __o._severity;
        _spec = __o._spec;
        _section = std::move(__o._section);
        _message = std::move(__o._message);
        return *this;
    }

private:
    ErrorInfo()                             _DELETED_;

public:
    FORCE_INLINE
    ViolationSeverity   Severity() const    _NOEXCEPT   { return _severity; }
    FORCE_INLINE
    EPUBSpec            Spec() const        _NOEXCEPT   { return _spec; }
    FORCE_INLINE
    const std::string&  Section() const     _NOEXCEPT   { return _section; }
    FORCE_INLINE
    const std::string&  Message() const     _NOEXCEPT   { return _message; }

private:
    ViolationSeverity   _severity;
    EPUBSpec            _spec;
    std::string         _section;
    std::string         _message;

};

typedef std::map<EPUBError, ErrorInfo>                                     ErrorLookup;

#if EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)

static const ErrorLookup gErrorLookupTable = {
    {EPUBError::OCFResourceNotInManifest, {ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "1.2", "All resources accessed by a publication rendition MUST be listed in its manifest."}},
    {EPUBError::OCFNoMetaInfDirectory, {ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.2", "Critical. All containers MUST have a META-INF directory."}},
    {EPUBError::OCFInvalidRelativeIRI, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.3", "Medium. IRIs should all be relative; META-INF contents are relative to root, not self."}},
    {EPUBError::OCFInvalidFileNameCharacter, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.4", "File names MUST use UTF-8 encoding and avoid some Unicode code points."}},
    {EPUBError::OCFNoContainerFile, {ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.5.1", "Containers MUST have a META-INF/container.xml file."}},
    {EPUBError::OCFNoRootfilesInContainer, {ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.5.1", "'container.xml' MUST contain <rootfiles> element with at least one <rootfile>."}},
    {EPUBError::OCFNonRelativeRootfileURL, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.5.1", "A <rootfile> element's 'full-path' attribute MUST be a relative IRI."}},
    {EPUBError::OCFInvalidRootfileURL, {ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.5.1", "The URL to a package file does not identify a valid resource."}},
    {EPUBError::OCFInvalidEncryptionFile, {ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "2.5.2", "'META-INF/encryption.xml' MUST be valid according to XML-ENC 1.1 schema."}},
    {EPUBError::OCFEncryptedFileStoredCompressed, {ViolationSeverity::Minor, EPUBSpec::OpenContainerFormat, "2.5.2", "Encrypted files SHOULD be compressed, then encrypted, then stored, not encrypted then stored-as-compressed."}},
    {EPUBError::OCFInvalidEncryptedFile, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.5.2", "The 'mimetype' file, contents of the META-INF directory, and package documents MUST NOT be encrypted."}},
    {EPUBError::OCFInvalidSignatureFile, {ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "2.5.6", "'META-INF/signature.xml' MUST be valid according to XML-DSig 1.1 schema."}},
    {EPUBError::OCFMultiPartZip, {ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "3.2", "An OCF container MUST NOT be split across multiple ZIP archives."}},
    {EPUBError::OCFNonDeflateCompression, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container's files MUST only use STORE or DEFLATE compression, values 0 or 8."}},
    {EPUBError::OCFZipEncryptionEncountered, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container MUST NOT use ZIP encryption."}},
    {EPUBError::OCFNonUTF8FileNames, {ViolationSeverity::Minor, EPUBSpec::OpenContainerFormat, "3.2", "A container MUST use UTF-8 for all file names."}},
    {EPUBError::OCFInvalidZipVersion, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container's ZIP archive version MUST be 10, 20 (for Deflate), or 45 (for ZIP64)."}},
    {EPUBError::OCFInvalidZipHeader, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container MUST NOT have a ZIP Decryption Header or Archive Extra Data Record."}},
    {EPUBError::OCFMimetypeFileNotFound, {ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "3.3", "A container MUST have a 'mimetype' file."}},
    {EPUBError::OCFMimetypeLocationIncorrect, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST be the first item in the archive."}},
    {EPUBError::OCFMimetypeStorageIncorrect, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST NOT be compressed or encrypted."}},
    {EPUBError::OCFMimetypeContentIncorrect, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST contain 'application/epub+zip' in UTF-8 with no padding."}},
    {EPUBError::OCFMimetypeHasExtraHeaderField, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST NOT have an extra field in its ZIP header."}},
    {EPUBError::OCFFontEncryptedIllegally, {ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "4.4", "Fonts MUST be encrypted only using Font Obfuscation as per OCF section 4.2."}},
    {EPUBError::OPFNoNavDocument, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "2.1", "Publications MUST contain exactly one navigation document."}},
    {EPUBError::OPFMultipleNavDocuments, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "2.1", "Publications MUST contain exactly one navigation document."}},
    {EPUBError::OPFInvalidPackageDocument, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.2", "Package documents MUST validate according to OPF schema."}},
    {EPUBError::OPFInvalidPackageDocumentExtension, {ViolationSeverity::Minor, EPUBSpec::OpenPublicationFormat, "3.2", "Package documents SHOULD have a .opf extension."}},
    {EPUBError::OPFPackageHasNoVersion, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.1", "<package> element MUST have version 3.0 (or 2.x for backward compatibility)."}},
    {EPUBError::OPFNoMetadata, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package MUST contain a <metadata> element as the first child of <package>."}},
    {EPUBError::OPFMetadataOutOfOrder, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package <metadata> element MUST be the first child of <package>."}},
    {EPUBError::OPFMissingIdentifierMetadata, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package metadata MUST include 'dc:identifier'."}},
    {EPUBError::OPFMissingTitleMetadata, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package metadata MUST include 'dc:title'."}},
    {EPUBError::OPFMissingLanguageMetadata, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package metadata MUST include 'dc:language'."}},
    {EPUBError::OPFLinkReferencesManifestItem, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.9", "<link> 'href' attribute MUST NOT identify an object in the manifest."}},
    {EPUBError::OPFNoManifest, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.10", "Package MUST contain a <manifest> element as the second child of <package>."}},
    {EPUBError::OPFManifestOutOfOrder, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.10", "Package <manifest> element MUST be second child of <package>."}},
    {EPUBError::OPFNoManifestItems, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.10", "<manifest> MUST contain at least one <item> element."}},
    {EPUBError::OPFNoSpine, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.12", "Package MUST contain a <spine> element as the third child of <package>."}},
    {EPUBError::OPFSpineOutOfOrder, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.12", "Package <spine> element MUST be third child of <package>."}},
    {EPUBError::OPFNoSpineItems, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.12", "<spine> MUST contain at least one <itemref> element."}},
    {EPUBError::OPFNoPrimarySpineItems, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.12", "<spine> MUST contain at least one primari <itemref> element (linear=yes)."}},
    {EPUBError::OPFMissingSpineIdref, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.13", "Spine <itemref> MUST have an idref attribute."}},
    {EPUBError::OPFInvalidSpineIdref, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.13", "Spine <itemref> idref attribute MUST reference an <item> in the manifest."}},
    {EPUBError::OPFSpineTargetNoContentDocument, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.13", "Spine <itemref> targets MUST include an EPUB Content Document in their fallback chain, EVEN IF the targetted manifest item's resource is a Core Media Type."}},
    {EPUBError::OPFMultipleBindingsForMediaType, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "Each <mediaType> element within <bindings> MUST reference a unique media-type."}},
    {EPUBError::OPFCoreMediaTypeBindingEncountered, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> elements MUST NOT reference a Core Media Type."}},
    {EPUBError::OPFBindingHandlerNotFound, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> elements' handler attribute MUST reference an item in the <manifest>."}},
    {EPUBError::OPFBindingHandlerInvalidType, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> handler resources MUST be XHTML content documents."}},
    {EPUBError::OPFBindingHandlerNotScripted, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> handler resources MUST have the scripted property."}},
    {EPUBError::OPFBindingHandlerNoMediaType, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> elements MUST have a 'media-type' attribute."}},
    {EPUBError::OPFPackageUniqueIDInvalid, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.1.1", "The <package> tag's unique-identifier attribute MUST reference a <dc:identifier> element in the package's <metadata>."}},
    {EPUBError::OPFMissingModificationDateMetadata, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.1.2", "<package> metadata MUST include a dcterms:modified metadata element."}},
    {EPUBError::OPFModificationDateInvalid, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "4.1.2", "'dcterms:modified' property value MUST be an xml schema dateTime of the form CCYY-MM-DD'T'hh:mm:ss'Z' (represented here in Unicode date-time format string syntax)."}},
    {EPUBError::OPFIllegalPrefixRedeclaration, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.2.3", "A Reserved Vocabulary member's prefix MUST NOT be re-declared in a prefix attribute."}},
    {EPUBError::OPFIllegalVocabularyIRIRedefinition, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.2.3", "A Reserved Vocabulary member's IRI MUST NOT be assigned to another prefix."}},
    {EPUBError::OPFIllegalPrefixDefinition, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.2.3", "The prefix '_' is reserved for future compatibility with RDFa so MUST NOT be defined."}},
    {EPUBError::OPFIllegalLinkRelValue, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.3.3", "<link> rel attributes 'marc21xml-record', 'mods-record', 'onix-record', 'xml-signature', 'xmp-record' MUST NOT be used when the refines attribute is present."}},
    {EPUBError::OPFMultipleCoverImageItems, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.3.4", "A <manifest> MUST NOT contain more than one item with the 'cover-image' attribute."}},
    {EPUBError::OPFConflictingSpineItemSpreads, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.3.5", "A spine <itemref> MUST NOT contain both the 'page-spread-left' and 'page-spread-right' properties."}},
    {EPUBError::OPFNoFallbackForForeignMediaType, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.2.2", "Content Documents referenced from the <spine> that are not Core Media types MUST have a Core Media fallback."}},
    {EPUBError::OPFInvalidManifestFallbackRef, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "5.2.2", "A manifest item's fallback attribute MUST provide the identifier of a valid, different manifest item."}},
    {EPUBError::OPFFallbackChainHasNoContentDocument, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "5.2.2", "A fallback chain MUST contain a valid EPUB Content Document."}},
    {EPUBError::OPFFallbackChainCircularReference, {ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "5.2.2", "A fallback chain MUST NOT contain circular references."}},
    {EPUBError::OPFNonConformantXMLResource, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.4", "Resources that are XML-based Media Types MUST conform to XML 1.0 and XML-Namespaces."}},
    {EPUBError::OPFExternalIdentifiersInXMLResource, {ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "5.4", "XML-based resources MUST NOT have external identifiers in their Document Type Definitions."}},
    {EPUBError::OPFXMLResourceUsesXInclude, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.4", "XML-based resources MUST NOT make use of XInclude."}},
    {EPUBError::OPFXMLResourceInvalidEncoding, {ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.4", "XML-based resources MUST be encoded in UTF-8 or UTF-16."}},
    {EPUBError::InvalidXHTML5Document, {ViolationSeverity::Major, EPUBSpec::ContentDocuments, "1.2", "XHTML Content Documents MUST conform to XHTML/HTML5 specifications."}},
    {EPUBError::XHTMLDocumentIncorrectExtension, {ViolationSeverity::Minor, EPUBSpec::ContentDocuments, "1.2", "XHTML Content Documents SHOULD use the .xhtml filename extension."}},
    {EPUBError::NavElementHasNoType, {ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.1", "Top-level <nav> elements in a Navigation Document MUST contain an epub:type attribute."}},
    {EPUBError::NavElementUnexpectedType, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "The epub:type designates an incorrect value."}},
    {EPUBError::NavElementInvalidChildren, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "<nav> elements in a Navigation Document MUST only contain <hgroup>, <h1..6> and <ol> elements as direct descendants."}},
    {EPUBError::NavElementInvalidChildOrder, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "<h...> elements within <nav> elements in a Navigation Document MUST occur only once, and as the first child."}},
    {EPUBError::NavListElementInvalidChild, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "Navigation Document <li> elements MUST contain one <a> element and an optional <ol> element, OR contain one <span> element and one required <ol> element."}},
    {EPUBError::NavNoTOCFound, {ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.1", "The 'toc' epub:type MUST occur on EXACTLY ONE <nav> element in the publication."}},
    {EPUBError::NavMultipleTOCsEncountered, {ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.1", "The 'toc' epub:type MUST occur on EXACTLY ONE <nav> element in the publication."}},
    {EPUBError::NavMultiplePageListsEncountered, {ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.2", "A publication MUST have no more than one <nav> element with an epub:type of 'page-list'."}},
    {EPUBError::NavMultipleLandmarksEncountered, {ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.3", "A publication MUST have no more than one <nav> element with an epub:type of 'landmarks'."}},
    {EPUBError::NavTableHasNoTitle, {ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.4", "Navigation tables other than 'toc', 'page-list', and 'landmarks' MUST have a title as the first child of the <nav> element."}},
    {EPUBError::SVGContainsAnimations, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.3.3", "SVG Animation Elements and Animation Event Attributes MUST NOT occur."}},
    {EPUBError::SVGInvalidForeignObjectContent, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.3.3", "SVG <foreignObject> elements MUST contain only valid XHTML Content Document Flow content, and its requiredExtensions attribute, if given, MUST be set to 'http://www.idpf.org/2007/ops'."}},
    {EPUBError::SVGInvalidTitle, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.3.3", "SVG <title> elements MUST contain only valid XHTML Content Document Phrasing content."}},
    {EPUBError::GlossaryInvalidRootNode, {ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.1.3.1.3", "Glossaries must use the <dl> element as their root node."}},
    {EPUBError::MediaOverlayInvalidRootElement, {ViolationSeverity::Critical, EPUBSpec::MediaOverlays, "2.4.1", "The root element of all Media Overlay documents MUST be an <smil> element."}},
    {EPUBError::MediaOverlayVersionMissing, {ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.1", "The root <smil> element of a Media Overlay MUST have a version attribute."}},
    {EPUBError::MediaOverlayInvalidVersion, {ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.1", "The root <smil> element of a Media Overlay MUST have a version of '3.0'."}},
    {EPUBError::MediaOverlayHeadIncorrectlyPlaced, {ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.2", "The optional <head> element MUST only occur as the first child element of the root <smil> element."}},
    {EPUBError::MediaOverlayNoBody, {ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.4", "The root <smil> element MUST contain a single <body> child element."}},
    {EPUBError::MediaOverlayMultipleBodies, {ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.4", "The root <smil> element MUST contain a single <body> child element."}},
    {EPUBError::MediaOverlayEmptyBody, {ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.4", "The <body> element MUST contain at least one <par> or <seq> child element."}},
    {EPUBError::MediaOverlayEmptySeq, {ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.5", "A <seq> element MUST contain at least one <par> or <seq> child element."}},
    {EPUBError::MediaOverlayEmptyPar, {ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.6", "A <par> element MUST contain a <text> child element."}},
    {EPUBError::MediaOverlayInvalidText, {ViolationSeverity::Critical, EPUBSpec::MediaOverlays, "2.4.7", "A <text> element MUST have a 'src' attribute."}},
    {EPUBError::MediaOverlayInvalidTextSource, {ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.7", "A <text> element's 'src' attribute MUST reference an item in the publication's <manifest>."}},
    {EPUBError::MediaOverlayTextSrcFragmentMissing, {ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.7", "A <text> element's 'src' attribute MUST contain a fragment identifier."}},
    {EPUBError::MediaOverlayInvalidAudio, {ViolationSeverity::Critical, EPUBSpec::MediaOverlays, "2.4.8", "An <audio> element MUST have a 'src' attribute."}},
    {EPUBError::MediaOverlayInvalidAudioSource, {ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.8", "An <audio> element's 'src' attribute MUST reference an item in the publication's <manifest>."}},
    {EPUBError::MediaOverlayInvalidAudioType, {ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.8", "An <audio> element's 'src' attribute MUST reference an item which is a member of the EPUB 3 Core Media Types."}},
    {EPUBError::CFIContainsLeadingZeroes, {ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Numbers in CFIs MUST NOT have leading zeroes."}},
    {EPUBError::CFIContainsTrailingFractionZeroes, {ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Fractional numbers in CFIs MUST NOT have trailing zeroes in their fractional part."}},
    {EPUBError::CFIContainsEmptyFraction, {ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Integral numbers in CFIs MUST be represented as integers."}},
    {EPUBError::CFIContainsTruncatedWholePart, {ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Fraction numbers in CFIs in the range 1 > N > 0 MUST have a '0.' prefix."}},
    {EPUBError::CFIParseFailed, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "2.3", "A CFI could not be parsed-- all special characters MUST be prefixed with a circumflex (^) character."}},
    {EPUBError::CFINonSlashStartCharacter, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.1", "A CFI reference MUST begin with a slash (/) character."}},
    {EPUBError::CFIInvalidSpineLocation, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.1", "An inter-publication CFI's first traversal step MUST be the location of the <spine> element within the publication's package document (usually '6')."}},
    {EPUBError::CFINonAssertedXMLID, {ViolationSeverity::Minor, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.2", "A CFI step referencing an XML node with an 'id' attribute MUST assert that ID as part of the step."}},
    {EPUBError::CFIInvalidIndirectionStartNode, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.3", "A CFI indirection clause can only step into resources identified by: OPF <itemref> through <item> 'href' attribute, HTML5 <iframe> or <embed> 'src' attribute, HTML5 <object> 'data' attribute, or SVG <image> and <use> 'xlink:href' attributes."}},
    {EPUBError::CFIIndirectionTargetMissing, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.3", "The 'href', 'src', 'data' &c. value used for indirection MUST be present."}},
    {EPUBError::CFIIndirectionTargetNotFound, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.3", "The target IRI of an indirection step references a missing resource."}},
    {EPUBError::CFICharOffsetOnIllegalElement, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.4", "A character offset MUST NOT be applied to an element, EXCEPT an HTML5 <img> element containing an 'alt' attribute."}},
    {EPUBError::CFICharOffsetInNonTerminatingStep, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.4", "A character offset MUST only appear in the terminating step of a CFI."}},
    {EPUBError::CFICharOffsetOutOfBounds, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.4", "A character offset MUST NOT be greater than the number of UTF-16 characters in the selected node."}},
    {EPUBError::CFITemporalOffsetInvalidResource, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.5", "A CFI temporal offset MUST ONLY be used on an audio or video resource."}},
    {EPUBError::CFITemporalOffsetInNonTerminatingStep, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.5", "A CFI temporal offset MUST ONLY appear in the terminating step of a CFI."}},
    {EPUBError::CFISpatialOffsetInvalidFormat, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.6", "A CFI spatial offset MUST be of the form 'xxx:yyy'."}},
    {EPUBError::CFISpatialOffsetOutOfBounds, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.6", "A CFI spatial offset MUST ONLY render coordinates in the range 0..100."}},
    {EPUBError::CFITextAssertionInvalidPlacement, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.8", "A CFI text assertion MUST ONLY occur after a character offset terminating step."}},
    {EPUBError::CFISideBiasInvalidPlacement, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.9", "A CFI side-bias assertion MUST ONLY occur at the end of a CFI."}},
    {EPUBError::CFISideBiasInvalidSide, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.9", "A CFI side-bias assertion MUST ONLY assert the values 'b' or 'a'."}},
    {EPUBError::CFIRangeInvalid, {ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.4", "A CFI range statement appears to be invalid. Did you forget to escape (^) something?"}},
    {EPUBError::CFIRangeContainsSideBias, {ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "3.4", "A ranged CFI MUST NOT contain any side-bias assertions."}}
};

#else   // !EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)

static ErrorLookup gErrorLookupTable;

INITIALIZER(__initErrorTables)
{
    gErrorLookupTable[OCFResourceNotInManifest] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "1.2", "All resources accessed by a publication rendition MUST be listed in its manifest.");
    gErrorLookupTable[OCFNoMetaInfDirectory] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.2", "Critical. All containers MUST have a META-INF directory.");
    gErrorLookupTable[OCFInvalidRelativeIRI] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.3", "Medium. IRIs should all be relative; META-INF contents are relative to root, not self.");
    gErrorLookupTable[OCFInvalidFileNameCharacter] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.4", "File names MUST use UTF-8 encoding and avoid some Unicode code points.");
    gErrorLookupTable[OCFNoContainerFile] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.5.1", "Containers MUST have a META-INF/container.xml file.");
    gErrorLookupTable[OCFNoRootfilesInContainer] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.5.1", "'container.xml' MUST contain <rootfiles> element with at least one <rootfile>.");
    gErrorLookupTable[OCFNonRelativeRootfileURL] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.5.1", "A <rootfile> element's 'full-path' attribute MUST be a relative IRI.");
    gErrorLookupTable[OCFInvalidRootfileURL] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "2.5.1", "The URL to a package file does not identify a valid resource.");
    gErrorLookupTable[OCFInvalidEncryptionFile] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "2.5.2", "'META-INF/encryption.xml' MUST be valid according to XML-ENC 1.1 schema.");
    gErrorLookupTable[OCFEncryptedFileStoredCompressed] = ErrorInfo(EPUBError::ViolationSeverity::Minor, EPUBSpec::OpenContainerFormat, "2.5.2", "Encrypted files SHOULD be compressed, then encrypted, then stored, not encrypted then stored-as-compressed.");
    gErrorLookupTable[OCFInvalidEncryptedFile] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "2.5.2", "The 'mimetype' file, contents of the META-INF directory, and package documents MUST NOT be encrypted.");
    gErrorLookupTable[OCFInvalidSignatureFile] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "2.5.6", "'META-INF/signature.xml' MUST be valid according to XML-DSig 1.1 schema.");
    gErrorLookupTable[OCFMultiPartZip] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenContainerFormat, "3.2", "An OCF container MUST NOT be split across multiple ZIP archives.");
    gErrorLookupTable[OCFNonDeflateCompression] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container's files MUST only use STORE or DEFLATE compression, values 0 or 8.");
    gErrorLookupTable[OCFZipEncryptionEncountered] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container MUST NOT use ZIP encryption.");
    gErrorLookupTable[OCFNonUTF8FileNames] = ErrorInfo(EPUBError::ViolationSeverity::Minor, EPUBSpec::OpenContainerFormat, "3.2", "A container MUST use UTF-8 for all file names.");
    gErrorLookupTable[OCFInvalidZipVersion] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container's ZIP archive version MUST be 10, 20 (for Deflate), or 45 (for ZIP64).");
    gErrorLookupTable[OCFInvalidZipHeader] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.2", "A container MUST NOT have a ZIP Decryption Header or Archive Extra Data Record.");
    gErrorLookupTable[OCFMimetypeFileNotFound] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenContainerFormat, "3.3", "A container MUST have a 'mimetype' file.");
    gErrorLookupTable[OCFMimetypeLocationIncorrect] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST be the first item in the archive.");
    gErrorLookupTable[OCFMimetypeStorageIncorrect] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST NOT be compressed or encrypted.");
    gErrorLookupTable[OCFMimetypeContentIncorrect] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST contain 'application/epub+zip' in UTF-8 with no padding.");
    gErrorLookupTable[OCFMimetypeHasExtraHeaderField] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "3.3", "A container's 'mimetype' file MUST NOT have an extra field in its ZIP header.");
    gErrorLookupTable[OCFFontEncryptedIllegally] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenContainerFormat, "4.4", "Fonts MUST be encrypted only using Font Obfuscation as per OCF section 4.2.");
    gErrorLookupTable[OPFNoNavDocument] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "2.1", "Publications MUST contain exactly one navigation document.");
    gErrorLookupTable[OPFMultipleNavDocuments] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "2.1", "Publications MUST contain exactly one navigation document.");
    gErrorLookupTable[OPFInvalidPackageDocument] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.2", "Package documents MUST validate according to OPF schema.");
    gErrorLookupTable[OPFInvalidPackageDocumentExtension] = ErrorInfo(EPUBError::ViolationSeverity::Minor, EPUBSpec::OpenPublicationFormat, "3.2", "Package documents SHOULD have a .opf extension.");
    gErrorLookupTable[OPFPackageHasNoVersion] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.1", "<package> element MUST have version 3.0 (or 2.x for backward compatibility).");
    gErrorLookupTable[OPFNoMetadata] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package MUST contain a <metadata> element as the first child of <package>.");
    gErrorLookupTable[OPFMetadataOutOfOrder] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package <metadata> element MUST be the first child of <package>.");
    gErrorLookupTable[OPFMissingIdentifierMetadata] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package metadata MUST include 'dc:identifier'.");
    gErrorLookupTable[OPFMissingTitleMetadata] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package metadata MUST include 'dc:title'.");
    gErrorLookupTable[OPFMissingLanguageMetadata] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.2", "Package metadata MUST include 'dc:language'.");
    gErrorLookupTable[OPFLinkReferencesManifestItem] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.9", "<link> 'href' attribute MUST NOT identify an object in the manifest.");
    gErrorLookupTable[OPFNoManifest] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.10", "Package MUST contain a <manifest> element as the second child of <package>.");
    gErrorLookupTable[OPFManifestOutOfOrder] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.10", "Package <manifest> element MUST be second child of <package>.");
    gErrorLookupTable[OPFNoManifestItems] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.10", "<manifest> MUST contain at least one <item> element.");
    gErrorLookupTable[OPFNoSpine] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.12", "Package MUST contain a <spine> element as the third child of <package>.");
    gErrorLookupTable[OPFSpineOutOfOrder] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "3.4.12", "Package <spine> element MUST be third child of <package>.");
    gErrorLookupTable[OPFNoSpineItems] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.12", "<spine> MUST contain at least one <itemref> element.");
    gErrorLookupTable[OPFNoPrimarySpineItems] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.12", "<spine> MUST contain at least one primari <itemref> element (linear=yes).");
    gErrorLookupTable[OPFMissingSpineIdref] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.13", "Spine <itemref> MUST have an idref attribute.");
    gErrorLookupTable[OPFInvalidSpineIdref] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.13", "Spine <itemref> idref attribute MUST reference an <item> in the manifest.");
    gErrorLookupTable[OPFSpineTargetNoContentDocument] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.13", "Spine <itemref> targets MUST include an EPUB Content Document in their fallback chain, EVEN IF the targetted manifest item's resource is a Core Media Type.");
    gErrorLookupTable[OPFMultipleBindingsForMediaType] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "Each <mediaType> element within <bindings> MUST reference a unique media-type.");
    gErrorLookupTable[OPFCoreMediaTypeBindingEncountered] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> elements MUST NOT reference a Core Media Type.");
    gErrorLookupTable[OPFBindingHandlerNotFound] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> elements' handler attribute MUST reference an item in the <manifest>.");
    gErrorLookupTable[OPFBindingHandlerInvalidType] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> handler resources MUST be XHTML content documents.");
    gErrorLookupTable[OPFBindingHandlerNotScripted] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> handler resources MUST have the scripted property.");
    gErrorLookupTable[OPFBindingHandlerNoMediaType] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "3.4.16", "<mediaType> elements MUST have a 'media-type' attribute.");
    gErrorLookupTable[OPFPackageUniqueIDInvalid] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.1.1", "The <package> tag's unique-identifier attribute MUST reference a <dc:identifier> element in the package's <metadata>.");
    gErrorLookupTable[OPFMissingModificationDateMetadata] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.1.2", "<package> metadata MUST include a dcterms:modified metadata element.");
    gErrorLookupTable[OPFModificationDateInvalid] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "4.1.2", "'dcterms:modified' property value MUST be an xml schema dateTime of the form CCYY-MM-DD'T'hh:mm:ss'Z' (represented here in Unicode date-time format string syntax).");
    gErrorLookupTable[OPFIllegalPrefixRedeclaration] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.2.3", "A Reserved Vocabulary member's prefix MUST NOT be re-declared in a prefix attribute.");
    gErrorLookupTable[OPFIllegalVocabularyIRIRedefinition] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.2.3", "A Reserved Vocabulary member's IRI MUST NOT be assigned to another prefix.");
    gErrorLookupTable[OPFIllegalPrefixDefinition] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.2.3", "The prefix '_' is reserved for future compatibility with RDFa so MUST NOT be defined.");
    gErrorLookupTable[OPFIllegalLinkRelValue] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.3.3", "<link> rel attributes 'marc21xml-record', 'mods-record', 'onix-record', 'xml-signature', 'xmp-record' MUST NOT be used when the refines attribute is present.");
    gErrorLookupTable[OPFMultipleCoverImageItems] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.3.4", "A <manifest> MUST NOT contain more than one item with the 'cover-image' attribute.");
    gErrorLookupTable[OPFConflictingSpineItemSpreads] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "4.3.5", "A spine <itemref> MUST NOT contain both the 'page-spread-left' and 'page-spread-right' properties.");
    gErrorLookupTable[OPFNoFallbackForForeignMediaType] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.2.2", "Content Documents referenced from the <spine> that are not Core Media types MUST have a Core Media fallback.");
    gErrorLookupTable[OPFInvalidManifestFallbackRef] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "5.2.2", "A manifest item's fallback attribute MUST provide the identifier of a valid, different manifest item.");
    gErrorLookupTable[OPFFallbackChainHasNoContentDocument] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "5.2.2", "A fallback chain MUST contain a valid EPUB Content Document.");
    gErrorLookupTable[OPFFallbackChainCircularReference] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::OpenPublicationFormat, "5.2.2", "A fallback chain MUST NOT contain circular references.");
    gErrorLookupTable[OPFNonConformantXMLResource] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.4", "Resources that are XML-based Media Types MUST conform to XML 1.0 and XML-Namespaces.");
    gErrorLookupTable[OPFExternalIdentifiersInXMLResource] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::OpenPublicationFormat, "5.4", "XML-based resources MUST NOT have external identifiers in their Document Type Definitions.");
    gErrorLookupTable[OPFXMLResourceUsesXInclude] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.4", "XML-based resources MUST NOT make use of XInclude.");
    gErrorLookupTable[OPFXMLResourceInvalidEncoding] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::OpenPublicationFormat, "5.4", "XML-based resources MUST be encoded in UTF-8 or UTF-16.");
    gErrorLookupTable[InvalidXHTML5Document] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::ContentDocuments, "1.2", "XHTML Content Documents MUST conform to XHTML/HTML5 specifications.");
    gErrorLookupTable[XHTMLDocumentIncorrectExtension] = ErrorInfo(EPUBError::ViolationSeverity::Minor, EPUBSpec::ContentDocuments, "1.2", "XHTML Content Documents SHOULD use the .xhtml filename extension.");
    gErrorLookupTable[NavElementHasNoType] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.1", "Top-level <nav> elements in a Navigation Document MUST contain an epub:type attribute.");
    gErrorLookupTable[NavElementUnexpectedType] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "The epub:type designates an incorrect value.");
    gErrorLookupTable[NavElementInvalidChildren] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "<nav> elements in a Navigation Document MUST only contain <hgroup>, <h1..6> and <ol> elements as direct descendants.");
    gErrorLookupTable[NavElementInvalidChildOrder] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "<h...> elements within <nav> elements in a Navigation Document MUST occur only once, and as the first child.");
    gErrorLookupTable[NavListElementInvalidChild] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.2.4.1", "Navigation Document <li> elements MUST contain one <a> element and an optional <ol> element, OR contain one <span> element and one required <ol> element.");
    gErrorLookupTable[NavNoTOCFound] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.1", "The 'toc' epub:type MUST occur on EXACTLY ONE <nav> element in the publication.");
    gErrorLookupTable[NavMultipleTOCsEncountered] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.1", "The 'toc' epub:type MUST occur on EXACTLY ONE <nav> element in the publication.");
    gErrorLookupTable[NavMultiplePageListsEncountered] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.2", "A publication MUST have no more than one <nav> element with an epub:type of 'page-list'.");
    gErrorLookupTable[NavMultipleLandmarksEncountered] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.3", "A publication MUST have no more than one <nav> element with an epub:type of 'landmarks'.");
    gErrorLookupTable[NavTableHasNoTitle] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::ContentDocuments, "2.2.4.2.4", "Navigation tables other than 'toc', 'page-list', and 'landmarks' MUST have a title as the first child of the <nav> element.");
    gErrorLookupTable[SVGContainsAnimations] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.3.3", "SVG Animation Elements and Animation Event Attributes MUST NOT occur.");
    gErrorLookupTable[SVGInvalidForeignObjectContent] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.3.3", "SVG <foreignObject> elements MUST contain only valid XHTML Content Document Flow content, and its requiredExtensions attribute, if given, MUST be set to 'http://www.idpf.org/2007/ops'.");
    gErrorLookupTable[SVGInvalidTitle] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.3.3", "SVG <title> elements MUST contain only valid XHTML Content Document Phrasing content.");
    gErrorLookupTable[GlossaryInvalidRootNode] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::ContentDocuments, "2.1.3.1.3", "Glossaries must use the <dl> element as their root node.");
    gErrorLookupTable[MediaOverlayInvalidRootElement] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::MediaOverlays, "2.4.1", "The root element of all Media Overlay documents MUST be an <smil> element.");
    gErrorLookupTable[MediaOverlayVersionMissing] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.1", "The root <smil> element of a Media Overlay MUST have a version attribute.");
    gErrorLookupTable[MediaOverlayInvalidVersion] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.1", "The root <smil> element of a Media Overlay MUST have a version of '3.0'.");
    gErrorLookupTable[MediaOverlayHeadIncorrectlyPlaced] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.2", "The optional <head> element MUST only occur as the first child element of the root <smil> element.");
    gErrorLookupTable[MediaOverlayNoBody] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.4", "The root <smil> element MUST contain a single <body> child element.");
    gErrorLookupTable[MediaOverlayMultipleBodies] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.4", "The root <smil> element MUST contain a single <body> child element.");
    gErrorLookupTable[MediaOverlayEmptyBody] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.4", "The <body> element MUST contain at least one <par> or <seq> child element.");
    gErrorLookupTable[MediaOverlayEmptySeq] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.5", "A <seq> element MUST contain at least one <par> or <seq> child element.");
    gErrorLookupTable[MediaOverlayEmptyPar] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.6", "A <par> element MUST contain a <text> child element.");
    gErrorLookupTable[MediaOverlayInvalidText] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::MediaOverlays, "2.4.7", "A <text> element MUST have a 'src' attribute.");
    gErrorLookupTable[MediaOverlayInvalidTextSource] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.7", "A <text> element's 'src' attribute MUST reference an item in the publication's <manifest>.");
    gErrorLookupTable[MediaOverlayTextSrcFragmentMissing] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.7", "A <text> element's 'src' attribute MUST contain a fragment identifier.");
    gErrorLookupTable[MediaOverlayInvalidAudio] = ErrorInfo(EPUBError::ViolationSeverity::Critical, EPUBSpec::MediaOverlays, "2.4.8", "An <audio> element MUST have a 'src' attribute.");
    gErrorLookupTable[MediaOverlayInvalidAudioSource] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::MediaOverlays, "2.4.8", "An <audio> element's 'src' attribute MUST reference an item in the publication's <manifest>.");
    gErrorLookupTable[MediaOverlayInvalidAudioType] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::MediaOverlays, "2.4.8", "An <audio> element's 'src' attribute MUST reference an item which is a member of the EPUB 3 Core Media Types.");
    gErrorLookupTable[CFIContainsLeadingZeroes] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Numbers in CFIs MUST NOT have leading zeroes.");
    gErrorLookupTable[CFIContainsTrailingFractionZeroes] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Fractional numbers in CFIs MUST NOT have trailing zeroes in their fractional part.");
    gErrorLookupTable[CFIContainsEmptyFraction] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Integral numbers in CFIs MUST be represented as integers.");
    gErrorLookupTable[CFIContainsTruncatedWholePart] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "2.2", "Fraction numbers in CFIs in the range 1 > N > 0 MUST have a '0.' prefix.");
    gErrorLookupTable[CFIParseFailed] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "2.3", "A CFI could not be parsed-- all special characters MUST be prefixed with a circumflex (^) character.");
    gErrorLookupTable[CFINonSlashStartCharacter] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.1", "A CFI reference MUST begin with a slash (/) character.");
    gErrorLookupTable[CFIInvalidSpineLocation] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.1", "An inter-publication CFI's first traversal step MUST be the location of the <spine> element within the publication's package document (usually '6').");
    gErrorLookupTable[CFINonAssertedXMLID] = ErrorInfo(EPUBError::ViolationSeverity::Minor, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.2", "A CFI step referencing an XML node with an 'id' attribute MUST assert that ID as part of the step.");
    gErrorLookupTable[CFIInvalidIndirectionStartNode] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.3", "A CFI indirection clause can only step into resources identified by: OPF <itemref> through <item> 'href' attribute, HTML5 <iframe> or <embed> 'src' attribute, HTML5 <object> 'data' attribute, or SVG <image> and <use> 'xlink:href' attributes.");
    gErrorLookupTable[CFIIndirectionTargetMissing] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.3", "The 'href', 'src', 'data' &c. value used for indirection MUST be present.");
    gErrorLookupTable[CFIIndirectionTargetNotFound] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.3", "The target IRI of an indirection step references a missing resource.");
    gErrorLookupTable[CFICharOffsetOnIllegalElement] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.4", "A character offset MUST NOT be applied to an element, EXCEPT an HTML5 <img> element containing an 'alt' attribute.");
    gErrorLookupTable[CFICharOffsetInNonTerminatingStep] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.4", "A character offset MUST only appear in the terminating step of a CFI.");
    gErrorLookupTable[CFICharOffsetOutOfBounds] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.4", "A character offset MUST NOT be greater than the number of UTF-16 characters in the selected node.");
    gErrorLookupTable[CFITemporalOffsetInvalidResource] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.5", "A CFI temporal offset MUST ONLY be used on an audio or video resource.");
    gErrorLookupTable[CFITemporalOffsetInNonTerminatingStep] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.5", "A CFI temporal offset MUST ONLY appear in the terminating step of a CFI.");
    gErrorLookupTable[CFISpatialOffsetInvalidFormat] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.6", "A CFI spatial offset MUST be of the form 'xxx:yyy'.");
    gErrorLookupTable[CFISpatialOffsetOutOfBounds] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.6", "A CFI spatial offset MUST ONLY render coordinates in the range 0..100.");
    gErrorLookupTable[CFITextAssertionInvalidPlacement] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.8", "A CFI text assertion MUST ONLY occur after a character offset terminating step.");
    gErrorLookupTable[CFISideBiasInvalidPlacement] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.9", "A CFI side-bias assertion MUST ONLY occur at the end of a CFI.");
    gErrorLookupTable[CFISideBiasInvalidSide] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.1.9", "A CFI side-bias assertion MUST ONLY assert the values 'b' or 'a'.");
    gErrorLookupTable[CFIRangeInvalid] = ErrorInfo(EPUBError::ViolationSeverity::Major, EPUBSpec::CanonicalFragmentIdentifiers, "3.4", "A CFI range statement appears to be invalid. Did you forget to escape (^) something?");
    gErrorLookupTable[CFIRangeContainsSideBias] = ErrorInfo(EPUBError::ViolationSeverity::Medium, EPUBSpec::CanonicalFragmentIdentifiers, "3.4", "A ranged CFI MUST NOT contain any side-bias assertions.");
}

#endif  // !EPUB_COMPILER_SUPPORTS(CXX_INITIALIZER_LISTS)
